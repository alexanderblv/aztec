'use client'

import { useState } from 'react'
import { aztecDemoService } from '@/lib/aztec-demo'
import { AztecService } from '@/lib/aztec'

interface CreateAuctionModalProps {
  isOpen: boolean
  onClose: () => void
  onAuctionCreated?: () => void
}

export default function CreateAuctionModal({ isOpen, onClose, onAuctionCreated }: CreateAuctionModalProps) {
  const [formData, setFormData] = useState({
    itemName: '',
    description: '',
    durationHours: 24,
    minBid: 1
  })
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState('')
  const [success, setSuccess] = useState(false)

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ—Ä–≤–∏—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Å–µ—Ç–∏
  const getAztecService = () => {
    if (typeof window === 'undefined') return aztecDemoService
    
    const network = localStorage.getItem('aztecNetwork') || 'sandbox'
    return network === 'testnet' ? new AztecService() : aztecDemoService
  }

  const handleSubmit = async (e: any) => {
    e.preventDefault()
    setIsLoading(true)
    setError('')

    try {
      // –í–∞–ª–∏–¥–∞—Ü–∏—è
      if (!formData.itemName.trim()) {
        throw new Error('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞')
      }
      if (!formData.description.trim()) {
        throw new Error('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ')
      }
      if (formData.minBid <= 0) {
        throw new Error('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0')
      }
      if (formData.durationHours <= 0) {
        throw new Error('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0')
      }

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞
      const service = getAztecService()
      
      const auctionId = await service.createAuction(
        formData.itemName,
        formData.description,
        formData.durationHours,
        formData.minBid
      )
      
      console.log(`–ê—É–∫—Ü–∏–æ–Ω —Å–æ–∑–¥–∞–Ω —Å ID: ${auctionId}`)
      setSuccess(true)
      
      // –í—ã–∑—ã–≤–∞–µ–º callback –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞—É–∫—Ü–∏–æ–Ω–æ–≤
      if (onAuctionCreated) {
        onAuctionCreated()
      }
      
      setTimeout(() => {
        setSuccess(false)
        onClose()
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        setFormData({
          itemName: '',
          description: '',
          durationHours: 24,
          minBid: 1
        })
      }, 2500)
      
    } catch (err: any) {
      setError(err.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞')
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞:', err)
    } finally {
      setIsLoading(false)
    }
  }

  const handleChange = (field: string, value: any) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }))
  }

  if (!isOpen) return null

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg max-w-lg w-full max-h-[90vh] overflow-y-auto">
        <div className="p-6">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-2xl font-bold text-gray-900">
              üèõÔ∏è –°–æ–∑–¥–∞—Ç—å –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –ê—É–∫—Ü–∏–æ–Ω
            </h2>
            <button
              onClick={onClose}
              className="text-gray-400 hover:text-gray-600 text-2xl"
            >
              √ó
            </button>
          </div>

          {success ? (
            <div className="text-center py-8">
              <div className="text-6xl mb-4">üéâ</div>
              <h3 className="text-xl font-semibold text-green-600 mb-2">
                –ê—É–∫—Ü–∏–æ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!
              </h3>
              <p className="text-gray-600">
                –í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∞—É–∫—Ü–∏–æ–Ω —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –≤ —Å–µ—Ç–∏ {typeof window !== 'undefined' && localStorage.getItem('aztecNetwork') === 'testnet' ? 'Aztec Testnet' : 'Aztec Sandbox'}.
              </p>
            </div>
          ) : (
            <div>
              {error && (
                <div className="mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded">
                  {error}
                </div>
              )}

              <form onSubmit={handleSubmit} className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ *
                  </label>
                  <input
                    type="text"
                    value={formData.itemName}
                    onChange={(e) => handleChange('itemName', e.target.value)}
                    className="input-field"
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –†–µ–¥–∫–∞—è –≤–∏–Ω—Ç–∞–∂–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∞"
                    disabled={isLoading}
                    required
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –û–ø–∏—Å–∞–Ω–∏–µ *
                  </label>
                  <textarea
                    value={formData.description}
                    onChange={(e) => handleChange('description', e.target.value)}
                    className="input-field"
                    rows={3}
                    placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞..."
                    disabled={isLoading}
                    required
                  />
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—á–∞—Å—ã) *
                    </label>
                    <input
                      type="number"
                      value={formData.durationHours}
                      onChange={(e) => handleChange('durationHours', parseInt(e.target.value) || 0)}
                      className="input-field"
                      min="1"
                      max="168"
                      disabled={isLoading}
                      required
                    />
                    <p className="text-xs text-gray-500 mt-1">–û—Ç 1 –¥–æ 168 —á–∞—Å–æ–≤ (7 –¥–Ω–µ–π)</p>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ (ETH) *
                    </label>
                    <input
                      type="number"
                      value={formData.minBid}
                      onChange={(e) => handleChange('minBid', parseFloat(e.target.value) || 0)}
                      className="input-field"
                      min="0.001"
                      step="0.001"
                      disabled={isLoading}
                      required
                    />
                  </div>
                </div>

                <div className="bg-blue-50 p-4 rounded-lg">
                  <h4 className="font-medium text-blue-900 mb-2 flex items-center">
                    üîí –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∞—É–∫—Ü–∏–æ–Ω–∞
                  </h4>
                  <ul className="text-sm text-blue-800 space-y-1">
                    <li>‚Ä¢ –í—Å–µ —Å—Ç–∞–≤–∫–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã</li>
                    <li>‚Ä¢ –£—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ –≤–∏–¥—è—Ç —Å—Ç–∞–≤–∫–∏ –¥—Ä—É–≥–∏—Ö</li>
                    <li>‚Ä¢ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
                    <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è zero-knowledge</li>
                  </ul>
                </div>

                <div className="bg-yellow-50 p-4 rounded-lg">
                  <div className="flex items-start">
                    <div className="text-yellow-600 mr-2">üí°</div>
                    <div>
                      <h4 className="font-medium text-yellow-900 mb-1">
                        –¢–µ–∫—É—â–∞—è —Å–µ—Ç—å
                      </h4>
                      <p className="text-sm text-yellow-800">
                        –ê—É–∫—Ü–∏–æ–Ω –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ —Å–µ—Ç–∏: {typeof window !== 'undefined' && localStorage.getItem('aztecNetwork') === 'testnet' ? 'Aztec Alpha Testnet (—Ä–µ–∞–ª—å–Ω–∞—è —Å–µ—Ç—å)' : 'Aztec Sandbox (–¥–µ–º–æ —Ä–µ–∂–∏–º)'}
                      </p>
                    </div>
                  </div>
                </div>

                <div className="flex space-x-3 pt-4">
                  <button
                    type="button"
                    onClick={onClose}
                    className="flex-1 btn-secondary"
                    disabled={isLoading}
                  >
                    –û—Ç–º–µ–Ω–∞
                  </button>
                  <button
                    type="submit"
                    className="flex-1 btn-primary disabled:opacity-50"
                    disabled={isLoading}
                  >
                    {isLoading ? '–°–æ–∑–¥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ Aztec...' : '–°–æ–∑–¥–∞—Ç—å –ê—É–∫—Ü–∏–æ–Ω'}
                  </button>
                </div>
              </form>
            </div>
          )}
        </div>
      </div>
    </div>
  )
} 