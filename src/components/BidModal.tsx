'use client'

import { useState, useEffect } from 'react'
import { useAztec } from '@/lib/aztec-context'
// import { aztecDemoService } from '@/lib/aztec-demo'
// import { AztecService } from '@/lib/aztec'

interface BidModalProps {
  isOpen: boolean
  auctionId: number | null
  onClose: () => void
}

interface AuctionInfo {
  id: number
  itemName: string
  minBid: number
  endTime: number
}

export default function BidModal({ isOpen, auctionId, onClose }: BidModalProps) {
  const [bidAmount, setBidAmount] = useState('')
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState('')
  const [success, setSuccess] = useState(false)
  const [auctionInfo, setAuctionInfo] = useState<AuctionInfo | null>(null)
  const [contractWarning, setContractWarning] = useState('')
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –µ–¥–∏–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç Aztec
  const { service, isTestnet } = useAztec()

  useEffect(() => {
    if (isOpen && auctionId && service) {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—É–∫—Ü–∏–æ–Ω–µ –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
      const loadAuctionInfo = async () => {
        try {
          // –î–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ª–æ–≥–∏–∫—É
          if (!isTestnet) {
            const mockAuctions = [
              { id: 1, itemName: '–†–µ–¥–∫–∞—è –≤–∏–Ω—Ç–∞–∂–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∞', minBid: 1000, endTime: Date.now() + 3600000 },
              { id: 2, itemName: '–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ —á–∞—Å—ã Rolex', minBid: 5000, endTime: Date.now() + 1800000 },
            ]
            
            const auction = mockAuctions.find(a => a.id === auctionId)
            setAuctionInfo(auction || null)
          } else {
            // –î–ª—è testnet –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            try {
              const realAuctionInfo = await service.getAuctionInfo(auctionId)
              if (realAuctionInfo) {
                setAuctionInfo({
                  id: auctionId,
                  itemName: realAuctionInfo.itemName,
                  minBid: realAuctionInfo.minBid,
                  endTime: realAuctionInfo.endTime
                })
              }
            } catch (error) {
              console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—É–∫—Ü–∏–æ–Ω–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ')
              const mockAuctions = [
                { id: 1, itemName: '–¢–µ—Å—Ç–æ–≤—ã–π –∞—É–∫—Ü–∏–æ–Ω 1', minBid: 100, endTime: Date.now() + 3600000 },
                { id: 2, itemName: '–¢–µ—Å—Ç–æ–≤—ã–π –∞—É–∫—Ü–∏–æ–Ω 2', minBid: 500, endTime: Date.now() + 1800000 },
              ]
              const auction = mockAuctions.find(a => a.id === auctionId)
              setAuctionInfo(auction || null)
            }
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞—É–∫—Ü–∏–æ–Ω–µ:', error)
        }
      }
      
      loadAuctionInfo()
    }
  }, [isOpen, auctionId, service, isTestnet])

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∞
  useEffect(() => {
    if (isOpen && service && isTestnet) {
      // –î–ª—è testnet –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
      const checkContractStatus = async () => {
        try {
          const contractAddress = service.getContractAddress()
          if (!contractAddress) {
            setContractWarning('–ö–æ–Ω—Ç—Ä–∞–∫—Ç Aztec –µ—â–µ –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –≤ testnet. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º (Sandbox) –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.')
          } else {
            setContractWarning('')
          }
        } catch (error) {
          setContractWarning('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ–º–æ —Ä–µ–∂–∏–º.')
        }
      }
      
      checkContractStatus()
    } else {
      setContractWarning('')
    }
  }, [isOpen, service, isTestnet])

  const handleSubmit = async (e: any) => {
    e.preventDefault()
    setIsLoading(true)
    setError('')

    try {
      const amount = parseFloat(bidAmount)
      
      if (!amount || amount <= 0) {
        throw new Error('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏')
      }
      
      if (auctionInfo && amount < auctionInfo.minBid) {
        throw new Error(`–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ ${auctionInfo.minBid} ETH`)
      }

      if (!service) {
        throw new Error('–°–µ—Ä–≤–∏—Å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ –∫–æ—à–µ–ª–µ–∫
      if (!service.getWalletAddress()) {
        throw new Error('–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫')
      }

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Ä–≤–∏—Å –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      if (auctionId) {
        await service.placeBid(auctionId, amount)
        
        setSuccess(true)
        console.log(`–ü—Ä–∏–≤–∞—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ ${amount} ETH –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞ ${auctionId}`)
        
        setTimeout(() => {
          setSuccess(false)
          onClose()
          setBidAmount('')
        }, 2500)
      }
      
    } catch (err: any) {
      let errorMessage = err.message || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞–≤–∫–∏'
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
      if (errorMessage.includes('–ö–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω') || errorMessage.includes('compiled contract')) {
        errorMessage = '–ö–æ–Ω—Ç—Ä–∞–∫—Ç Aztec –µ—â–µ –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º (Sandbox) –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.'
      } else if (errorMessage.includes('–ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω')) {
        errorMessage = '–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –≤ –ø–∞–Ω–µ–ª–∏ —Å–ø—Ä–∞–≤–∞'
      }
      
      setError(errorMessage)
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞–≤–∫–∏:', err)
    } finally {
      setIsLoading(false)
    }
  }

  const formatTimeRemaining = (endTime: number) => {
    const remaining = endTime - Date.now()
    if (remaining <= 0) return '–ó–∞–≤–µ—Ä—à–µ–Ω'
    
    const hours = Math.floor(remaining / (1000 * 60 * 60))
    const minutes = Math.floor((remaining % (1000 * 60 * 60)) / (1000 * 60))
    
    if (hours > 0) {
      return `${hours}—á ${minutes}–º`
    }
    return `${minutes}–º`
  }

  if (!isOpen || !auctionInfo) return null

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg max-w-md w-full">
        <div className="p-6">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-2xl font-bold text-gray-900">
              üîí –ü—Ä–∏–≤–∞—Ç–Ω–∞—è –°—Ç–∞–≤–∫–∞
            </h2>
            <button
              onClick={onClose}
              className="text-gray-400 hover:text-gray-600 text-2xl"
            >
              √ó
            </button>
          </div>

          {success ? (
            <div className="text-center py-8">
              <div className="text-6xl mb-4">üîê</div>
              <h3 className="text-xl font-semibold text-green-600 mb-2">
                –°—Ç–∞–≤–∫–∞ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!
              </h3>
              <p className="text-gray-600">
                –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–∞–¥–µ–∂–Ω–æ —Å–∫—Ä—ã—Ç–∞ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞.
              </p>
            </div>
          ) : (
            <div>
              <div className="bg-gray-50 p-4 rounded-lg mb-6">
                <h3 className="font-semibold text-gray-900 mb-2">
                  {auctionInfo.itemName}
                </h3>
                <div className="flex justify-between text-sm text-gray-600">
                  <span>–ú–∏–Ω. —Å—Ç–∞–≤–∫–∞: {auctionInfo.minBid} ETH</span>
                  <span>–û—Å—Ç–∞–ª–æ—Å—å: {formatTimeRemaining(auctionInfo.endTime)}</span>
                </div>
              </div>

              {error && (
                <div className="mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded">
                  {error}
                </div>
              )}

              {contractWarning && (
                <div className="mb-4 p-3 bg-yellow-100 border border-yellow-400 text-yellow-700 rounded">
                  <div className="flex items-start">
                    <div className="text-yellow-600 mr-2">‚ö†Ô∏è</div>
                    <div>
                      <h4 className="font-medium mb-1">–í–Ω–∏–º–∞–Ω–∏–µ</h4>
                      <p className="text-sm">{contractWarning}</p>
                    </div>
                  </div>
                </div>
              )}

              <form onSubmit={handleSubmit} className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –†–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏ (ETH) *
                  </label>
                  <input
                    type="number"
                    value={bidAmount}
                    onChange={(e) => setBidAmount(e.target.value)}
                    className="input-field"
                    placeholder={`–ú–∏–Ω–∏–º—É–º ${auctionInfo.minBid} ETH`}
                    min={auctionInfo.minBid}
                    step="0.001"
                    disabled={isLoading}
                    required
                  />
                </div>

                <div className="bg-blue-50 p-4 rounded-lg">
                  <h4 className="font-medium text-blue-900 mb-2 flex items-center">
                    üîí –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å
                  </h4>
                  <ul className="text-sm text-blue-800 space-y-1">
                    <li>‚Ä¢ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ —à–∏—Ñ—Ä—É–µ—Ç—Å—è –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ</li>
                    <li>‚Ä¢ –ù–∏–∫—Ç–æ –Ω–µ –≤–∏–¥–∏—Ç —Ä–∞–∑–º–µ—Ä –≤–∞—à–µ–π —Å—Ç–∞–≤–∫–∏</li>
                    <li>‚Ä¢ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è zk-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏</li>
                    <li>‚Ä¢ –†–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç –ø–æ–±–µ–¥—ã</li>
                  </ul>
                </div>

                <div className="bg-yellow-50 p-4 rounded-lg">
                  <div className="flex items-start">
                    <div className="text-yellow-600 mr-2">‚ö†Ô∏è</div>
                    <div>
                      <h4 className="font-medium text-yellow-900 mb-1">
                        –í–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å
                      </h4>
                      <p className="text-sm text-yellow-800">
                        –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞–≤–∫—É –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –æ—Ç–æ–∑–≤–∞—Ç—å. 
                        –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Å—É–º–º—ã.
                      </p>
                    </div>
                  </div>
                </div>

                <div className="flex space-x-3 pt-4">
                  <button
                    type="button"
                    onClick={onClose}
                    className="flex-1 btn-secondary"
                    disabled={isLoading}
                  >
                    –û—Ç–º–µ–Ω–∞
                  </button>
                  <button
                    type="submit"
                    className="flex-1 btn-primary disabled:opacity-50"
                    disabled={isLoading || !!contractWarning}
                  >
                    {isLoading ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ Aztec...' : contractWarning ? '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –°—Ç–∞–≤–∫—É'}
                  </button>
                </div>
              </form>
            </div>
          )}
        </div>
      </div>
    </div>
  )
} 