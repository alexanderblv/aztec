'use client'

import { useState, useEffect } from 'react'
import { useAztec } from '@/lib/aztec-context'
import Header from '@/components/Header'
import AuctionList from '@/components/AuctionList'
import CreateAuctionModal from '@/components/CreateAuctionModal'
import BidModal from '@/components/BidModal'
import PrivyWalletConnectFull from '@/components/PrivyWalletConnectFull'
import WalletConnect from '@/components/WalletConnect'
import NetworkSelector from '@/components/NetworkSelector'
import NetworkStatusAlert from '@/components/NetworkStatusAlert'

export default function Home() {
  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false)
  const [isBidModalOpen, setIsBidModalOpen] = useState(false)
  const [selectedAuctionId, setSelectedAuctionId] = useState<number | null>(null)
  const [walletMode, setWalletMode] = useState<'privy' | 'demo'>('privy')
  const [privyError, setPrivyError] = useState<string>('')
  const [activeTab, setActiveTab] = useState<'active' | 'completed'>('active')
  const [refreshKey, setRefreshKey] = useState(0)

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç Aztec
  const { 
    network, 
    isConnected, 
    walletAddress, 
    switchNetwork, 
    connectWallet, 
    disconnect 
  } = useAztec()

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    const savedMode = localStorage.getItem('walletMode') as 'privy' | 'demo'
    const privyLoggedOut = localStorage.getItem('privyLoggedOut')
    
    if (savedMode === 'demo') {
      // –î–ª—è –¥–µ–º–æ —Ä–µ–∂–∏–º–∞ –≤—Å–µ–≥–¥–∞ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setWalletMode(savedMode)
    } else if (savedMode === 'privy' && privyLoggedOut !== 'true') {
      // –î–ª—è Privy –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –±—ã–ª —è–≤–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω
      setWalletMode(savedMode || 'privy')
    }
  }, [])

  const handleWalletConnected = async (address: string) => {
    try {
      // –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ—à–µ–ª–µ–∫ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç Aztec
      const aztecAddress = await connectWallet()
      localStorage.setItem('walletAddress', aztecAddress)
      localStorage.setItem('walletMode', walletMode)
      localStorage.setItem('aztecNetwork', network)
      // –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥ logout —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–æ–≤–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
      localStorage.removeItem('privyLoggedOut')
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Aztec –∫–æ—à–µ–ª—å–∫–∞:', error)
    }
  }

  const handleDisconnectWallet = () => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è Privy –∫–æ—à–µ–ª—å–∫–æ–≤
    if (walletMode === 'privy') {
      localStorage.setItem('privyLoggedOut', 'true')
    }
    
    // –û—Ç–∫–ª—é—á–∞–µ–º —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç Aztec
    disconnect()
    
    setPrivyError('')
    localStorage.removeItem('walletAddress')
    localStorage.removeItem('walletMode')
    localStorage.removeItem('aztecNetwork')
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á—Ç–æ–±—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ Privy
    if (walletMode === 'privy') {
      setTimeout(() => {
        window.location.reload()
      }, 100)
    }
  }

  const handleNetworkChange = async (newNetwork: 'sandbox' | 'testnet') => {
    try {
      await switchNetwork(newNetwork)
      localStorage.setItem('aztecNetwork', newNetwork)
      console.log(`–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ ${newNetwork}`)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–µ—Ç–∏:', error)
    }
  }

  const handleBidClick = (auctionId: number) => {
    setSelectedAuctionId(auctionId)
    setIsBidModalOpen(true)
  }

  const handleAuctionCreated = () => {
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞—É–∫—Ü–∏–æ–Ω–æ–≤
    setRefreshKey(prev => prev + 1)
    console.log('–ê—É–∫—Ü–∏–æ–Ω —Å–æ–∑–¥–∞–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫')
  }

  const handleBidPlaced = () => {
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞—É–∫—Ü–∏–æ–Ω–æ–≤ –ø–æ—Å–ª–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏
    setRefreshKey(prev => prev + 1)
    console.log('–°—Ç–∞–≤–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫')
  }

  if (!isConnected) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center max-w-4xl mx-auto px-4">
          <h1 className="text-4xl font-bold text-gray-900 mb-8">
            –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –ê—É–∫—Ü–∏–æ–Ω—ã
          </h1>
          <p className="text-lg text-gray-600 mb-8 max-w-2xl mx-auto">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∞—É–∫—Ü–∏–æ–Ω–æ–≤, —Ä–∞–±–æ—Ç–∞—é—â—É—é –Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ Aztec Network. 
            –ó–¥–µ—Å—å –≤–∞—à–∏ —Å—Ç–∞–≤–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤.
          </p>

          {/* –í—ã–±–æ—Ä —Å–µ—Ç–∏ Aztec */}
          <NetworkSelector 
            currentNetwork={network}
            onNetworkChange={handleNetworkChange}
            disabled={false}
          />

          {/* –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
          <div className="mb-8 max-w-md mx-auto">
            <div className="flex rounded-lg border border-gray-300 overflow-hidden">
              <button
                onClick={() => {
                  setWalletMode('privy')
                  setPrivyError('')
                }}
                className={`flex-1 py-2 px-4 text-sm font-medium ${
                  walletMode === 'privy'
                    ? 'bg-blue-600 text-white'
                    : 'bg-white text-gray-700 hover:bg-gray-50'
                }`}
              >
                Privy (–†–µ–∞–ª—å–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏)
              </button>
              <button
                onClick={() => {
                  setWalletMode('demo')
                  setPrivyError('')
                }}
                className={`flex-1 py-2 px-4 text-sm font-medium ${
                  walletMode === 'demo'
                    ? 'bg-blue-600 text-white'
                    : 'bg-white text-gray-700 hover:bg-gray-50'
                }`}
              >
                –î–µ–º–æ —Ä–µ–∂–∏–º
              </button>
            </div>
          </div>

          {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
          {walletMode === 'privy' ? (
            <div>
              <PrivyWalletConnectFull 
                onWalletConnected={handleWalletConnected}
                onError={setPrivyError}
                onLogoutComplete={handleDisconnectWallet}
              />
              {privyError && (
                <div className="mt-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded max-w-md mx-auto">
                  <p className="text-sm">{privyError}</p>
                  <button 
                    onClick={() => setWalletMode('demo')}
                    className="mt-2 text-xs underline"
                  >
                    –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –¥–µ–º–æ —Ä–µ–∂–∏–º
                  </button>
                </div>
              )}
            </div>
          ) : (
            <WalletConnect onWalletConnected={handleWalletConnected} network={network} />
          )}
          
          <div className="mt-12 grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto">
            <div className="card text-center">
              <div className="text-3xl mb-4">üîí</div>
              <h3 className="text-lg font-semibold mb-2">–ü–æ–ª–Ω–∞—è –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å</h3>
              <p className="text-gray-600">–í–∞—à–∏ —Å—Ç–∞–≤–∫–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ–≤–∏–¥–∏–º—ã –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞</p>
            </div>
            <div className="card text-center">
              <div className="text-3xl mb-4">‚ö°</div>
              <h3 className="text-lg font-semibold mb-2">Zero-Knowledge</h3>
              <p className="text-gray-600">–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–µ–¥–æ–≤—ã–µ zk-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
            </div>
            <div className="card text-center">
              <div className="text-3xl mb-4">üèÜ</div>
              <h3 className="text-lg font-semibold mb-2">–ß–µ—Å—Ç–Ω—ã–µ –¢–æ—Ä–≥–∏</h3>
              <p className="text-gray-600">–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π</p>
            </div>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen">
      <Header 
        walletAddress={walletAddress || ''}
        onDisconnect={handleDisconnectWallet}
        onCreateAuction={() => setIsCreateModalOpen(true)}
        walletMode={walletMode}
        network={network}
      />

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* –°—Ç–∞—Ç—É—Å —Å–µ—Ç–∏ */}
        <NetworkStatusAlert />

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Å–µ—Ç–∏ */}
        <div className="mb-6">
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <div className="flex items-center justify-between">
              <div>
                <h3 className="text-sm font-medium text-blue-900">
                  {network === 'testnet' ? 'üåê Aztec Alpha Testnet' : 'üîß Aztec Sandbox (–¥–µ–º–æ)'}
                </h3>
                <p className="text-sm text-blue-700">
                  {network === 'testnet' 
                    ? '–ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ä–µ–∞–ª—å–Ω–æ–π —Ç–µ—Å—Ç–æ–≤–æ–π —Å–µ—Ç–∏ Aztec. –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ.'
                    : '–î–µ–º–æ —Ä–µ–∂–∏–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ.'
                  }
                </p>
              </div>
              <NetworkSelector 
                currentNetwork={network}
                onNetworkChange={handleNetworkChange}
                disabled={false}
              />
            </div>
          </div>
        </div>

        {/* –¢–∞–±—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∞—É–∫—Ü–∏–æ–Ω–æ–≤ */}
        <div className="mb-8">
          <div className="border-b border-gray-200">
            <nav className="-mb-px flex space-x-8">
              <button
                onClick={() => setActiveTab('active')}
                className={`py-2 px-1 border-b-2 font-medium text-sm ${
                  activeTab === 'active'
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                –ê–∫—Ç–∏–≤–Ω—ã–µ –∞—É–∫—Ü–∏–æ–Ω—ã
              </button>
              <button
                onClick={() => setActiveTab('completed')}
                className={`py-2 px-1 border-b-2 font-medium text-sm ${
                  activeTab === 'completed'
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∞—É–∫—Ü–∏–æ–Ω—ã
              </button>
            </nav>
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –∞—É–∫—Ü–∏–æ–Ω–æ–≤ */}
        <AuctionList 
          key={refreshKey}
          onBidClick={handleBidClick} 
          filterType={activeTab}
        />
      </main>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */}
      <CreateAuctionModal
        isOpen={isCreateModalOpen}
        onClose={() => setIsCreateModalOpen(false)}
        onAuctionCreated={handleAuctionCreated}
      />

      <BidModal 
        isOpen={isBidModalOpen}
        auctionId={selectedAuctionId}
        onClose={() => {
          setIsBidModalOpen(false)
          setSelectedAuctionId(null)
        }}
      />
    </div>
  )
} 