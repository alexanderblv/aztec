/**
 * Enhanced Wallet Connection Debug Script v1.3
 * –î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å Real Mode
 */

console.log('üîç Enhanced Wallet Connection Diagnostics v1.3');
console.log('================================================');

// 1. Check Real Mode Connection Issue
console.log('\nüåê Real Mode Connection Diagnostics:');
const appMode = localStorage.getItem('appMode')
const walletMode = localStorage.getItem('walletMode')
const connectedWallet = localStorage.getItem('aztecConnectedWallet')
const walletAddress = localStorage.getItem('walletAddress')

console.log('App Mode:', appMode)
console.log('Wallet Mode:', walletMode)
console.log('Connected Wallet:', connectedWallet)
console.log('Wallet Address:', walletAddress)

// Check if this is the problematic scenario
if (appMode === 'real' && walletMode === 'aztec' && connectedWallet) {
  console.log('‚úÖ Real Mode with Aztec wallet - checking if real wallet is connected...')
  
  // In the fix, real wallets should set walletMode to 'aztec' correctly
  if (walletAddress && walletAddress.startsWith('0x')) {
    console.log('‚úÖ Real wallet address detected:', walletAddress)
  } else {
    console.log('‚ùå Demo wallet address detected - this indicates the bug exists')
    console.log('üîß Try the fix commands below')
  }
} else if (appMode === 'demo') {
  console.log('‚ÑπÔ∏è Demo Mode - this is expected to use demo wallets')
} else {
  console.log('‚ö†Ô∏è Unclear configuration')
}

// 2. Enhanced function for Real Mode diagnostics
window.diagnoseRealModeConnection = function() {
  console.log('\nüîç Real Mode Connection Analysis:')
  
  const diagnosis = {
    appMode: localStorage.getItem('appMode'),
    walletMode: localStorage.getItem('walletMode'),
    connectedWallet: localStorage.getItem('aztecConnectedWallet'),
    walletAddress: localStorage.getItem('walletAddress'),
    realWalletProviders: window.ethereum?.providers?.length || 'single provider',
    azguardActive: window.ethereum?.isAzguard || 
      window.ethereum?.providers?.some(p => p.isAzguard),
    metamaskActive: window.ethereum?.isMetaMask ||
      window.ethereum?.providers?.some(p => p.isMetaMask)
  }
  
  console.table(diagnosis)
  
  // Analyze the situation
  if (diagnosis.appMode === 'real' && diagnosis.walletMode === 'aztec') {
    if (diagnosis.azguardActive) {
      console.log('‚úÖ Configuration looks correct for Real Mode with Azguard')
      
      // Check if the wallet address seems real or demo
      if (diagnosis.walletAddress && diagnosis.walletAddress.length > 10) {
        console.log('‚úÖ Wallet address appears to be real:', diagnosis.walletAddress)
      } else {
        console.log('‚ùå Wallet address appears to be demo/invalid')
      }
    } else {
      console.log('‚ùå Real Mode selected but no Azguard wallet found')
      console.log('üí° Make sure Azguard extension is installed and enabled')
    }
  } else if (diagnosis.appMode === 'demo') {
    console.log('‚ÑπÔ∏è Demo Mode - using simulated wallet')
  }
  
  return diagnosis
}

// 3. Fix function for Real Mode connection issue
window.fixRealModeConnection = function() {
  console.log('\nüîß Fixing Real Mode Connection Issue...')
  
  // Clear potentially conflicting data
  const keysToRemove = [
    'walletAddress',
    'walletMode', 
    'aztecConnectedWallet',
    'aztecWalletDisconnected'
  ]
  
  keysToRemove.forEach(key => {
    localStorage.removeItem(key)
    console.log('Removed:', key)
  })
  
  // Set proper Real Mode configuration
  localStorage.setItem('appMode', 'real')
  localStorage.setItem('walletMode', 'aztec')
  
  console.log('‚úÖ Real Mode configuration restored')
  console.log('üîÑ Please reload the page and connect your real wallet again')
  
  setTimeout(() => {
    if (confirm('Reload page now to apply fixes?')) {
      window.location.reload()
    }
  }, 2000)
}

// 4. Previous wallet conflict diagnostics (existing code)
console.log('\nüí≥ –°—Ç–∞—Ç—É—Å window.ethereum:');
console.log('window.ethereum —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!window.ethereum);
console.log('isMetaMask:', window.ethereum?.isMetaMask);
console.log('providers:', window.ethereum?.providers?.length || 'N/A');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
console.log('\nüì± –î–∞–Ω–Ω—ã–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞:');
console.log('–°–µ—Ç—å:', localStorage.getItem('aztecNetwork'));
console.log('–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞:', localStorage.getItem('walletAddress'));
console.log('–†–µ–∂–∏–º –∫–æ—à–µ–ª—å–∫–∞:', localStorage.getItem('walletMode'));
console.log('Privy —Å—Ç–∞—Ç—É—Å:', localStorage.getItem('privyLoggedOut'));

// –ü—Ä–æ–≤–µ—Ä—è–µ–º window –æ–±—ä–µ–∫—Ç—ã
console.log('\nüåê –û–±—ä–µ–∫—Ç—ã –≤ window:');
console.log('ethereum:', typeof window.ethereum);
console.log('MetaMask:', typeof window.ethereum?.isMetaMask);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Aztec –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
try {
  console.log('\n‚öóÔ∏è React —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ):');
  // –≠—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ React DevTools
  const reactFiberNode = document.querySelector('[data-reactroot]') || document.querySelector('#__next');
  if (reactFiberNode && reactFiberNode._reactInternalFiber) {
    console.log('React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω, –Ω–æ –¥–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç—Ä–µ–±—É–µ—Ç React DevTools');
  }
} catch (e) {
  console.log('React –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
console.log('\n‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏:');
console.log('- "Cannot find module"');
console.log('- "–ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω"'); 
console.log('- "–ö–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω"');
console.log('- "MetaMask encountered an error"');

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è:');
console.log('1. –ï—Å–ª–∏ —Å–µ—Ç—å = "testnet" ‚Üí –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ "sandbox"');
console.log('2. –ï—Å–ª–∏ walletAddress = null ‚Üí –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫');
console.log('3. –ï—Å–ª–∏ –º–Ω–æ–≥–æ –æ—à–∏–±–æ–∫ MetaMask ‚Üí –æ—Ç–∫–ª—é—á–∏—Ç–µ –¥—Ä—É–≥–∏–µ –∫–æ—à–µ–ª—å–∫–∏');
console.log('4. –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ "Cannot find module" ‚Üí –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–º–æ —Ä–µ–∂–∏–º');

console.log('\nüîß –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –∑–∞–ø—É—Å—Ç–∏—Ç–µ:');
console.log('localStorage.setItem("aztecNetwork", "sandbox")');
console.log('localStorage.removeItem("walletAddress")');
console.log('window.location.reload()');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–±—Ä–æ—Å–∞
window.resetAztecWallet = function() {
  console.log('üîÑ –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ—à–µ–ª—å–∫–∞...');
  localStorage.removeItem('walletAddress');
  localStorage.removeItem('walletMode');
  localStorage.removeItem('privyLoggedOut');
  localStorage.setItem('aztecNetwork', 'sandbox');
  console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
  setTimeout(() => window.location.reload(), 1000);
};

console.log('\nüöÄ –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: resetAztecWallet()');

// 4. Test Real Mode bidding functionality
window.testRealModeBidding = function() {
  console.log('\nüß™ Testing Real Mode Bidding...')
  
  const appMode = localStorage.getItem('appMode')
  const walletMode = localStorage.getItem('walletMode')
  const walletAddress = localStorage.getItem('walletAddress')
  
  if (appMode !== 'real' || walletMode !== 'aztec') {
    console.log('‚ùå Not in Real Mode - switch to Real Mode first')
    return false
  }
  
  if (!walletAddress) {
    console.log('‚ùå No wallet address found - connect your real wallet first')
    return false
  }
  
  console.log('‚úÖ Real Mode configuration detected:')
  console.log('  - App Mode:', appMode)
  console.log('  - Wallet Mode:', walletMode)
  console.log('  - Wallet Address:', walletAddress)
  
  // Check if service is available and correctly configured
  const isServiceReady = typeof window !== 'undefined' && 
    window.location.pathname && 
    document.querySelector('[data-testid="auction-list"], .auction, [class*="auction"]')
  
  if (isServiceReady) {
    console.log('‚úÖ Auction interface detected - ready for testing')
    console.log('üí° Try placing a bid on an auction to test the fix')
  } else {
    console.log('‚ö†Ô∏è Auction interface not fully loaded yet')
  }
  
  return true
}

console.log('testRealModeBidding() - —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å—Ç–∞–≤–æ–∫ –≤ Real Mode'); 